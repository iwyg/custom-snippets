/*vim: et:ts=2:sw=2:sts=2*/

snippet stylesheet
	<?xml version="1.0" encoding="utf-8"?>
	<xsl:stylesheet version="${1:1.0}" xmlns:xsl="${2:http://www.w3.org/1999/XSL/Transform}">

		<xsl:template match="${3:/}">
		</xsl:template>

	</xsl:stylesheet>

snippet apply
	<xsl:apply-templates select="${1:node}"/>

snippet call
	<xsl:call-template name="${1:name}">
		<xsl:with-param name="${2:name}" select="${3:select}"/>
	</xsl:call-template>

snippet atpl
	<xsl:template match="${1:xpath}" ${2}>
		${3}
	</xsl:template>

snippet ntpl
	<xsl:template name="${1:name}">
		${2}
	</xsl:template>

snippet element
	<xsl:element name="${1:name}">
		${2}
	</xsl:element>

snippet attr
	<xsl:attribute name="${1:name}">
		${2}
	</xsl:attribute>

snippet var
	<xsl:variable name="${1:name}">
		${2}
	</xsl:variable>

snippet each
	<xsl:for-each select="${1:select}">
		${2:body}
	</xsl:for-each>

snippet choose
	<xsl:choose>
		<xsl:when test="${1:test}">
			${2:body}
		</xsl:when>
		<xsl:otherwise></xsl:otherwise>
	</xsl:choose>

snippet when 
	<xsl:when test="${1:test}">
		${2:body}
	</xsl:when>

snippet if
	<xsl:if test="${1:test}">
		${2:body}
	</xsl:if>

snippet value
	<xsl:value-of select="${1:select}"/>

snippet copy
	<xsl:copy-of select="${1:select}"/>
